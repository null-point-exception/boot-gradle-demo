// buildscript必须在顶部，注意位置
buildscript {
    ext {
        bootgradleVersion = "2.1.1.RELEASE"
        springbootVersion =  "2.1.3.RELEASE"
        lombokVersion = "1.18.2"
        junitVersion = "4.12"
        bootmybatisVersion = "1.3.0"
        mybatisplusVersion = "3.1.2"
        mybatisplusGenerateVersion = "3.1.2"
        freemarkerVersion = "2.3.28"
        bootpagehelperVersion = "1.2.5"
        swagger2Version = "2.9.2"
        hutoolVersion = "4.6.1"
        compileresourceVersion = "1.8"
        compiletargetVersion = "1.8"
    }
    repositories {
        // 优先使用国内源
        maven { url 'https://maven.aliyun.com/repository/public' }
        mavenCentral()
    }
    dependencies {
        // 让spring-boot支持gradle
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${bootgradleVersion}"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "2.1.3.RELEASE"
}

// 应用插件
apply plugin: 'java'
apply plugin: 'idea'
// 使用spring boot
apply plugin: "org.springframework.boot"
// 使用spring boot的自动依赖管理
apply plugin: 'io.spring.dependency-management'

group 'com.practice'
version '1.0.0'

// 指定java版本
sourceCompatibility = compileresourceVersion
targetCompatibility = compiletargetVersion

// maven中央仓库
repositories {
    //国内镜像
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    mavenCentral()
}

// 项目依赖列表
dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    runtime "mysql:mysql-connector-java"
    // mybatis-plus
    compile "com.baomidou:mybatis-plus-boot-starter:${mybatisplusVersion}"
    // 代码生成配置(用于根据ftl自动生成对应的文件)
    compile "com.baomidou:mybatis-plus-generator:${mybatisplusGenerateVersion}"
    // 模板引擎(freemarker，和上面mybatis-plus-generator配合使用)
    compile "org.freemarker:freemarker:${freemarkerVersion}"
    // 分页插件
    compile "com.github.pagehelper:pagehelper-spring-boot-starter:${bootpagehelperVersion}"
    // swagger2
    compile "io.springfox:springfox-swagger2:${swagger2Version}"
    compile "io.springfox:springfox-swagger-ui:${swagger2Version}"
    // 定义lombok依赖
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    compile "cn.hutool:hutool-core:${hutoolVersion}"

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "junit:junit:${junitVersion}"
}
